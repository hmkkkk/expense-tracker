{"version":3,"sources":["components/Logout.js","components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/TransactionForm.js","components/Login.js","components/Register.js","App.js","components/UseToken.js","index.js"],"names":["Logout","className","onClick","localStorage","removeItem","window","location","reload","Header","username","state","action","type","loading","transactions","payload","filter","transaction","id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useState","dbLoading","setDbLoading","month","year","a","axios","get","res","data","response","delete","config","Headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","TransactionList","user","JSON","parse","getItem","newDate","Date","getMonth","getFullYear","label","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","useEffect","placeholder","find","obj","options","onChange","e","target","preventDefault","animation","variant","TransactionForm","setText","setAmount","onSubmit","newTransaction","userId","htmlFor","required","Login","setToken","setUserName","password","setPassword","setError","setLoading","history","useHistory","loginUser","credentials","fetch","method","headers","body","stringify","then","console","log","status","json","handleSubmit","token","push","disabled","to","Register","confirmPassword","setConfirmPassword","registerUser","FormOk","length","App","tokenString","userToken","getToken","undefined","setItem","useToken","path","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b1f0386.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Logout() {\r\n    \r\n    function logOff() {\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>\r\n            <button className=\"logoutButton\" onClick={logOff}>Wyloguj się</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React from 'react'\r\nimport Logout from './Logout';\r\n\r\nexport const Header = ({username}) => {\r\n    return (\r\n        <>\r\n        <h2>\r\n            Witaj {username}!\r\n        </h2>\r\n        <h5>\r\n            Nie jesteś {username}? <Logout />\r\n        </h5>\r\n        </>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: state.transactions.filter(transaction => transaction.id !==\r\n                    action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n            case 'TRANSACTION_ERROR':\r\n                return {\r\n                    ...state,\r\n                    error: action.payload\r\n                }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer, useState } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// initial state\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    const [loading, setLoading] = useState(null);\r\n    const [dbLoading, setDbLoading] = useState(null);\r\n\r\n    // Actions\r\n    async function getTransactions(username, month, year) {\r\n        \r\n        try {\r\n            const res = await axios.get(`/api/Expense/${username}?month=${month}&year=${year}`);\r\n            setDbLoading(true);\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data,\r\n                \r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n   async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`api/Expense/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            Headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/Expense', transaction, config)\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading,\r\n        dbLoading,\r\n        setDbLoading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n          <h4>Twoje Saldo:</h4>\r\n          <h1>{total} PLN</h1>  \r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Przychody</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">{income} PLN</p>\r\n        </div>\r\n        <div>\r\n          <h4>Wydatki</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">{expense} PLN</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const Transaction = ({transaction}) => {\r\nconst { deleteTransaction } = useContext(GlobalContext);\r\n\r\n        const sign = transaction.amount < 0 ? '-' : '+'; \r\n\r\n        \r\n        return (\r\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n                {transaction.text} <span>{sign}{Math.abs(transaction.amount)} PLN</span><button onClick={() => deleteTransaction(transaction.id)}\r\n                className=\"delete-btn\">x</button>\r\n            </li>\r\n         )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport Select from 'react-select';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions, getTransactions, dbLoading, setDbLoading } = useContext(GlobalContext);\r\n\r\n    const user = JSON.parse(localStorage.getItem('token'));\r\n    let newDate = new Date()\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    const data = [\r\n        {\r\n          value: 1,\r\n          label: \"Styczen\"\r\n        },\r\n        {\r\n          value: 2,\r\n          label: \"Luty\"\r\n        },\r\n        {\r\n          value: 3,\r\n          label: \"Marzec\"\r\n        },\r\n        {\r\n          value: 4,\r\n          label: \"Kwiecien\"\r\n        },\r\n        {\r\n          value: 5,\r\n          label: \"Maj\"\r\n        },\r\n        {\r\n          value: 6,\r\n          label: \"Czerwiec\"\r\n        },\r\n        {\r\n            value: 7,\r\n            label: \"Lipiec\"\r\n        },\r\n        {\r\n            value: 8,\r\n            label: \"Sierpień\"\r\n        },\r\n        {\r\n            value: 9,\r\n            label: \"Wrzesień\"\r\n        },\r\n        {\r\n            value: 10,\r\n            label: \"Październik\"\r\n        },\r\n        {\r\n            value: 11,\r\n            label: \"Listopad\"\r\n        },\r\n        {\r\n            value: 12,\r\n            label: \"Grudzień\"\r\n        }\r\n      ];\r\n\r\n      // set value for default selection\r\n  const [selectedMonth, setSelectedMonth] = useState(month);\r\n  const [selectedYear, setSelectedYear] = useState(year);\r\n \r\n  // handle onChange event of the dropdown\r\n\r\n  const filterChanges = e => {\r\n      e.preventDefault()\r\n      setDbLoading(false)\r\n      getTransactions(user.username, selectedMonth, selectedYear)\r\n  }\r\n\r\n    useEffect(() => {\r\n        getTransactions(user.username, month, year);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <>\r\n         <h3>Historia</h3>\r\n         <div className=\"wrapper\">\r\n         <Select\r\n         className=\"test ml-1\"\r\n        placeholder=\"Select Option\"\r\n        value={data.find(obj => obj.value === selectedMonth)} // set selected value\r\n        options={data} // set list of the data\r\n        onChange={(e)=>{setSelectedMonth(e.value)}} // assign onChange function\r\n      />\r\n      <input className=\"yearInput test\" \r\n      type=\"number\"\r\n      value={selectedYear} \r\n      onChange={(e)=>{setSelectedYear(e.target.value)}} placeholder=\"Wprowadź kwotę\" />\r\n         </div>\r\n         \r\n      <button onClick={filterChanges} className=\"btn\">Filtruj</button>\r\n      \r\n      \r\n         {dbLoading ? \r\n         <ul className=\"list\">\r\n             {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} /> ))}\r\n         </ul>  :\r\n         <ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" />\r\n         }\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const TransactionForm = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const user = JSON.parse(localStorage.getItem('token'));\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            userId: +user.id,\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Dodaj nową transakcję</h3>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-control\">\r\n                    <label className=\"transactionLabel\" htmlFor=\"text\">Nazwa</label>\r\n                    <input required type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Wprowadź nazwę\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                    <label className=\"transactionLabel\" htmlFor=\"amount\"\r\n                        >Kwota <br />\r\n                        (Jeśli chcesz dodać wydatek, przed kwotą wprowadź minusa \" - \")</label\r\n                    >\r\n                    <input className=\"moneyInput\" required type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Wprowadź kwotę\" />\r\n                    </div>\r\n                    <button className=\"btn\">Dodaj transakcję</button>\r\n                </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport default function Login({ setToken }) {\r\n    const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  \r\n\r\n  async function loginUser(credentials) {\r\n    \r\n    return fetch('/api/Account/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n  \r\n    .then(data => {\r\n      console.log(data);\r\n      if (data.status !== 200) { setError(\"nieprawidłowe dane logowania\");}\r\n      else {return data.json()}\r\n    })\r\n    \r\n }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    \r\n      setToken(token);\r\n      setLoading(false);\r\n      history.push(\"/\")\r\n  }\r\n\r\n  return(\r\n      <div>\r\n        <h1>Zaloguj się</h1>\r\n        <form onSubmit={handleSubmit} >\r\n            <div className=\"form-control\">    \r\n                <label htmlFor=\"login\">\r\n                    <p>Nazwa użytkownika</p>\r\n                </label>\r\n                <input type=\"text\"  onChange={e => setUserName(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"password\">\r\n                    <p>Hasło</p>\r\n                </label>\r\n                <input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button disabled={loading} className=\"btn\" type=\"submit\">Zaloguj się</button>\r\n                \r\n            </div>\r\n        </form>\r\n        <h5>Nie masz konta? <Link to=\"/register\">Zarejestuj się</Link> </h5>\r\n        {error && <p className=\"errorp\">{error}</p>} <br />\r\n        {loading && <div className=\"center\" ><ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" /></div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\nexport const Register = ({setToken}) => {\r\n    const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function registerUser(credentials) {\r\n  return fetch('/api/Account/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => {\r\n      if (data.status !== 200) { setError(\"Coś poszło nie tak\");}\r\n      if(data.status === 400) {setError(\"Nazwa uzytkownika jest zajęta\")}\r\n      else {return data.json()}\r\n    })\r\n }\r\n\r\n  const handleSubmit = async e => {\r\n    var FormOk = true;\r\n\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    if (username.length < 4 || username.length > 20) {\r\n        setError(\"Nazwa powinna mieć od 4 do 20 znaków\")\r\n        FormOk = false;\r\n\r\n    }\r\n    if (password.length < 4 || password.length > 20) {\r\n        setError(\"Hasło powinno mieć od 4 do 20 znaków\")\r\n        FormOk = false;\r\n\r\n    }\r\n    if (password !== confirmPassword) {\r\n        setError(\"Hasła muszą być takie same\")\r\n        FormOk = false;\r\n\r\n    }\r\n    if(FormOk === true)\r\n    {\r\n        const token = await registerUser({\r\n            username,\r\n            password\r\n          });\r\n          setLoading(false)\r\n            setToken(token);\r\n    }\r\n    \r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <h1>Zarejestruj się</h1>\r\n        <form onSubmit={handleSubmit} >\r\n            <div className=\"form-control\">    \r\n                <label htmlFor=\"login\">\r\n                    <p>Nazwa użytkownika</p>\r\n                </label>\r\n                <input type=\"text\" required onChange={e => setUserName(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"password\">\r\n                    <p>Hasło</p>\r\n                </label>\r\n                <input type=\"password\" required onChange={e => setPassword(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"password\">\r\n                    <p>Potwierdź hasło</p>\r\n                </label>\r\n                <input type=\"password\" required onChange={e => setConfirmPassword(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn\" type=\"submit\">Zarejestruj się</button>\r\n            </div>\r\n        </form>\r\n        \r\n        <h5>Masz już konto? <Link to=\"/\">Zaloguj się</Link> </h5>\r\n    </div>\r\n    {error && <p className=\"errorp\">{error}</p>}\r\n    {loading && <div className=\"center\" ><ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" /></div>}\r\n    </>\r\n    )\r\n}\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { Header } from './components/Header';\r\nimport { Balance } from './components/Balance';\r\nimport { IncomeExpenses } from'./components/IncomeExpenses';\r\nimport { TransactionList } from './components/TransactionList';\r\nimport { TransactionForm } from './components/TransactionForm';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport  Login  from './components/Login';\r\nimport  {Register}  from './components/Register';\r\nimport useToken from './components/UseToken';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\n\r\n\r\nfunction App() {\r\n  const { token, setToken } = useToken();\r\n  const user = JSON.parse(localStorage.getItem('token'));\r\n\r\n  if(!token) {\r\n    return <>\r\n    \r\n    <Router>\r\n      <h1>Notatnik wydatków</h1>\r\n      <br/><br/>\r\n      <Route path=\"/register\">\r\n        <Register  setToken={setToken} />\r\n      </Route >\r\n      <Route path=\"/\" exact render={(props) => (\r\n        <Login  setToken={setToken} />\r\n      )}/>\r\n    </Router>\r\n    </>\r\n\r\n  }\r\n \r\n  return (\r\n    <GlobalProvider>\r\n      \r\n      <Header username={user.username}/>\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <TransactionForm />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = localStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n      };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n\r\n  const saveToken = userToken => {\r\n    if(userToken !== undefined)\r\n    {\r\n      localStorage.setItem('token', JSON.stringify(userToken));\r\n      setToken(userToken.token);\r\n    }\r\n\r\n    \r\n  };\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}